🧪 리눅스 명령어 확장 문법 핵심 요약

기호       : 이름                        : 설명
-------------------------------------------------------------------------------
|          : 파이프(pipe)                : 앞 명령의 출력을 다음 명령의 입력으로 전달
>          : 출력 리디렉션               : 출력 결과를 파일에 저장 (덮어쓰기)
>>         : 출력 추가 리디렉션          : 출력 결과를 파일에 이어서 추가
<          : 입력 리디렉션               : 파일 내용을 명령어의 입력으로 사용
*          : 와일드카드 (전체)           : 모든 문자 또는 문자열과 일치
?          : 와일드카드 (한 글자)        : 한 글자와 일치
;          : 명령어 구분자               : 여러 명령어를 한 줄에서 순서대로 실행
&&         : AND 실행자                  : 앞 명령어가 성공한 경우에만 다음 명령 실행
||         : OR 실행자                   : 앞 명령어가 실패한 경우에만 다음 명령 실행
`...`      : 명령어 치환 (백틱)           : 명령어의 출력 결과를 문자열처럼 사용
$(...)     : 명령어 치환 (선호됨)         : 명령어의 출력 결과를 문자열처럼 사용

예시:
- ls | grep py                  → ls의 결과 중 "py"가 포함된 줄만 출력
- echo hello > file.txt         → "hello"를 file.txt에 저장 (덮어씀)
- echo world >> file.txt        → "world"를 file.txt에 이어서 저장
- sort < names.txt              → names.txt 내용을 정렬해서 출력
- echo "Today is $(date)"       → 현재 날짜를 포함한 문장 출력
- cd /tmp; ls                   → /tmp로 이동한 뒤 바로 ls 실행
- make && ./main                → make가 성공하면 ./main 실행
- make || echo "실패"           → make가 실패하면 "실패" 출력

참고:
- `` `명령어` `` 는 예전 방식이고, $(명령어) 형식이 가독성 높고 더 선호됨.
