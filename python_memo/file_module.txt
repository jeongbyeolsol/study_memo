✅ os 모듈
📌 역할:
운영체제 수준의 작업을 처리하는 데 사용돼.
(예: 경로, 파일, 디렉터리, 환경 변수, 프로세스 등)

import os

# 현재 작업 디렉터리
print(os.getcwd())

# 디렉터리 이동
os.chdir('/tmp')

# 디렉터리 목록
print(os.listdir('.'))

# 파일/폴더 존재 여부
print(os.path.exists('example.txt'))

# 디렉터리 생성/삭제
os.mkdir('new_folder')
os.rmdir('new_folder')

# 파일 삭제
os.remove('file.txt')

# 경로 합치기
path = os.path.join('folder', 'file.txt')
print(path)  # → folder/file.txt (OS별로 자동 처리)




✅ pathlib 모듈 (Python 3.4+)
pathlib은 os + os.path를 객체지향적으로 대체하기 위해 만들어졌어.

📌 특징:
경로를 문자열이 아닌 객체(Path) 로 다룸
더 직관적이고 파이썬스럽게 경로를 처리 가능

from pathlib import Path

# 현재 작업 디렉터리
p = Path.cwd()
print(p)

# 경로 조합
file_path = Path("folder") / "file.txt"
print(file_path)

# 파일 존재 여부
print(file_path.exists())

# 파일 내용 읽기
print(file_path.read_text())

# 디렉터리 생성
Path("new_folder").mkdir(exist_ok=True)

# 모든 .txt 파일 찾기
for txt in Path(".").glob("*.txt"):
    print(txt.name)
